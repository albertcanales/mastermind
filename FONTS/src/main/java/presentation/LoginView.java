package presentation;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Arrays;
import java.util.Locale;

/**
 * Vista de l'inici de sessió d'un usuari
 * @author Mar Gonzàlez Català
 */
public class LoginView {

    /**
     * Controlador de presentació
     */
    private final ControladorPresentacio controladorPresentacio;

    /**
     * Panell contenidor
     */
    private JPanel panel;

    /**
     * Botó per tornar a la vista anterior
     */
    private JButton buttonTorna;

    /**
     * Camp de text pel nom d'usuari
     */
    private JTextField textFieldNomUsuari;

    /**
     * Camp de text per la contrasenya
     */
    private JPasswordField textFieldContrasenya;

    /**
     * Botó per iniciar sessió de l'usuari
     */
    private JButton buttonIniciaSessio;

    /**
     * Enllaç per registrar l'usuari
     */
    private JLabel labelRegistre;

    /**
     * Constructor per defecte de la vista
     */
    LoginView() {
        controladorPresentacio = ControladorPresentacio.getInstance();
        $$$setupUI$$$();
        initComponents();
    }

    /**
     * Mètode per mostrar la vista
     */
    void show() {
        controladorPresentacio.setContent(panel);
        controladorPresentacio.setTitle("Registre");
    }

    /**
     * Mètode per inicialitzar els components de la vista
     */
    void initComponents() {
        buttonIniciaSessio.addActionListener(actionEvent -> iniciaSessioButtonClick());
        buttonTorna.addActionListener(actionEvent -> controladorPresentacio.showInitialView());
        labelRegistre.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                controladorPresentacio.showRegisterView();
            }
        });
    }

    /**
     * Mètode que efectua les accions pertinents en clicar el botó per iniciar sessió
     */
    private void iniciaSessioButtonClick() {
        String username = textFieldNomUsuari.getText();
        String password = Arrays.toString(textFieldContrasenya.getPassword());
        if (controladorPresentacio.existsUser(username) && controladorPresentacio.loginUser(username, password)) {
            controladorPresentacio.showHomeView();
        } else {
            controladorPresentacio.showWarningDialog("No s'ha pogut iniciar sessió", "La combinació usuari/contrasenya no es correcta");
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel.add(panel1, BorderLayout.NORTH);
        buttonTorna = new JButton();
        buttonTorna.setText("Torna");
        panel1.add(buttonTorna);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel.add(panel2, BorderLayout.CENTER);
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(0);
        label1.setText("Nom d'usuari");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(label1, gbc);
        textFieldNomUsuari = new JTextField();
        textFieldNomUsuari.setHorizontalAlignment(0);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 40, 0, 40);
        panel2.add(textFieldNomUsuari, gbc);
        textFieldContrasenya = new JPasswordField();
        textFieldContrasenya.setHorizontalAlignment(0);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 40, 0, 40);
        panel2.add(textFieldContrasenya, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel2.add(spacer1, gbc);
        final JLabel label2 = new JLabel();
        label2.setEnabled(true);
        label2.setHorizontalAlignment(0);
        label2.setText("Contrasenya");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(label2, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel2.add(spacer2, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        panel.add(panel3, BorderLayout.SOUTH);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        panel3.add(panel4, gbc);
        buttonIniciaSessio = new JButton();
        buttonIniciaSessio.setText("Inicia Sessió");
        panel4.add(buttonIniciaSessio);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        panel3.add(panel5, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("No tens una compta?");
        panel5.add(label3);
        labelRegistre = new JLabel();
        Font labelRegistreFont = this.$$$getFont$$$(null, Font.BOLD, -1, labelRegistre.getFont());
        if (labelRegistreFont != null) labelRegistre.setFont(labelRegistreFont);
        labelRegistre.setForeground(new Color(-15789893));
        labelRegistre.setHorizontalAlignment(0);
        labelRegistre.setText("Registra't");
        panel5.add(labelRegistre);
        label1.setLabelFor(textFieldNomUsuari);
        label2.setLabelFor(textFieldContrasenya);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
