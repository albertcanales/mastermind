package presentation;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.util.Hashtable;

public class NovaPartidaBreakerPanel extends JPanel {

    private JPanel panel;
    private JRadioButton radioButton1;
    private JRadioButton radioButton2;
    private JComboBox comboBox1;
    private JComboBox comboBox2;
    private JComboBox comboBox3;
    private JComboBox comboBox4;
    private JComboBox comboBox5;
    private JComboBox comboBox6;
    private JPanel panel1;
    private JSlider sliderDificultat;

    NovaPartidaBreakerPanel() {
        $$$setupUI$$$();
        initComponents();
    }

    void initComponents() { //TODO: Canviar els parametres de la partida a crear segons la interaccio amb la UI
        initSlider();
    }

    private void initSlider() {
        Hashtable<Integer, JLabel> labelTable = new Hashtable<Integer, JLabel>();
        labelTable.put(new Integer(1),
                new JLabel("Facil"));
        labelTable.put(new Integer(2),
                new JLabel("Mitja"));
        labelTable.put(new Integer(3),
                new JLabel("Dificil"));
        sliderDificultat.setLabelTable(labelTable);
    }

    Integer getAlgorisme() {
        return null;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        final JLabel label1 = new JLabel();
        label1.setText("Dificultat:");
        panel1.add(label1, BorderLayout.NORTH);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, BorderLayout.CENTER);
        sliderDificultat = new JSlider();
        sliderDificultat.setMajorTickSpacing(2);
        sliderDificultat.setMaximum(3);
        sliderDificultat.setMinimum(1);
        sliderDificultat.setMinorTickSpacing(1);
        sliderDificultat.setPaintLabels(true);
        sliderDificultat.setPaintTicks(false);
        sliderDificultat.setPaintTrack(true);
        panel2.add(sliderDificultat, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel2.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel2.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
