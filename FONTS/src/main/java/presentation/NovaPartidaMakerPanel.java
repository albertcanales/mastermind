package presentation;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;

public class NovaPartidaMakerPanel extends JPanel {

    private JPanel panel;
    private JRadioButton radioButtonFiveGuess;
    private JRadioButton radioButtonGenetic;
    private JComboBox comboBox1;
    private JComboBox comboBox2;
    private JComboBox comboBox3;
    private JComboBox comboBox4;

    private Integer algoritme;

    //TODO: Canviar els parametres de la partida a crear segons la interaccio amb la UI
    //TODO: Representar adequadament la seleccio de la sequencia solucio
    NovaPartidaMakerPanel() {
        $$$setupUI$$$();
        initComponents();
    }

    void initComponents() {
        initComboBox();

        comboBox1.addActionListener(actionEvent -> colorComboBox(actionEvent));
        comboBox2.addActionListener(actionEvent -> colorComboBox(actionEvent));
        comboBox3.addActionListener(actionEvent -> colorComboBox(actionEvent));
        comboBox4.addActionListener(actionEvent -> colorComboBox(actionEvent));
    }

    private void colorComboBox(ActionEvent actionEvent) {
        JComboBox comboBox = (JComboBox) actionEvent.getSource();
        Object value = comboBox.getSelectedItem();

        if (value.equals(1)) comboBox.setForeground(Color.WHITE);
        else if (value.equals(2)) comboBox.setForeground(Color.BLACK);
        else if (value.equals(3)) comboBox.setForeground(Color.RED);
        else if (value.equals(4)) comboBox.setForeground(Color.BLUE);
        else if (value.equals(5)) comboBox.setForeground(Color.ORANGE);
        else if (value.equals(6)) comboBox.setForeground(Color.PINK);
    }

    class MyRenderer extends DefaultListCellRenderer {
        public Component getListCellRendererComponent(JList list, Object value,
                                                      int index, boolean isSelected, boolean cellHasFocus) {
            JLabel lbl = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            lbl.setText("O");
            if (value.equals(1)) lbl.setForeground(Color.WHITE);
            else if (value.equals(2)) lbl.setForeground(Color.BLACK);
            else if (value.equals(3)) lbl.setForeground(Color.RED);
            else if (value.equals(4)) lbl.setForeground(Color.BLUE);
            else if (value.equals(5)) lbl.setForeground(Color.ORANGE);
            else if (value.equals(6)) lbl.setForeground(Color.PINK);

            return lbl;
        }
    }

    public void initComboBox() {
        Integer color_options[] = {1, 2, 3, 4, 5, 6};
        DefaultComboBoxModel model = new DefaultComboBoxModel<>(color_options);

        comboBox1.setModel(new DefaultComboBoxModel<>(color_options));
        comboBox2.setModel(new DefaultComboBoxModel<>(color_options));
        comboBox3.setModel(new DefaultComboBoxModel<>(color_options));
        comboBox4.setModel(new DefaultComboBoxModel<>(color_options));
        comboBox1.setRenderer(new MyRenderer());
        comboBox2.setRenderer(new MyRenderer());
        comboBox3.setRenderer(new MyRenderer());
        comboBox4.setRenderer(new MyRenderer());
    }

    Integer getAlgorisme() {
        if (radioButtonFiveGuess.isSelected()) return 1;
        else return 2; //radioButtonGenetic.isSelected()
    }

    List<Integer> getSolucio() {
        List<Integer> solucio = new ArrayList<>();
        solucio.add((Integer) comboBox1.getSelectedItem());
        solucio.add((Integer) comboBox2.getSelectedItem());
        solucio.add((Integer) comboBox3.getSelectedItem());
        solucio.add((Integer) comboBox4.getSelectedItem());
        return solucio;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Algoritme:");
        panel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        radioButtonFiveGuess = new JRadioButton();
        radioButtonFiveGuess.setSelected(true);
        radioButtonFiveGuess.setText("FiveGuess");
        panel1.add(radioButtonFiveGuess, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radioButtonGenetic = new JRadioButton();
        radioButtonGenetic.setSelected(false);
        radioButtonGenetic.setText("Genetic");
        panel1.add(radioButtonGenetic, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Seqüència Solució:");
        panel.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel.add(panel2, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        comboBox1 = new JComboBox();
        comboBox1.setEditable(false);
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        comboBox1.setModel(defaultComboBoxModel1);
        panel2.add(comboBox1);
        comboBox2 = new JComboBox();
        comboBox2.setEditable(false);
        panel2.add(comboBox2);
        comboBox3 = new JComboBox();
        panel2.add(comboBox3);
        comboBox4 = new JComboBox();
        panel2.add(comboBox4);
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(radioButtonFiveGuess);
        buttonGroup.add(radioButtonGenetic);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
