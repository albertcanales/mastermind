package presentation;

import exceptions.presentation.BolaNoExistent;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Representació d'una seqüència del joc en la interfície de Swing
 *
 * @author Albert Canales Ros
 */
public class SequenciaPanel {

    /**
     * Panell contenidor
     */
    private JPanel panel;

    /**
     * Llista de boles de la seqüència (bolaButton1, ..., bolaButton4)
     */
    private final ArrayList<BolaButton> bolaButtonList;

    private BolaButton bolaButton1;
    private BolaButton bolaButton2;
    private BolaButton bolaButton3;
    private BolaButton bolaButton4;

    /**
     * Constructor per defecte de la seqüència. No assigna color a cap de les boles
     */
    SequenciaPanel() {
        $$$setupUI$$$();
        bolaButtonList = new ArrayList<>(List.of(bolaButton1, bolaButton2, bolaButton3, bolaButton4));
    }

    /**
     * Mètode per adjuntar un observador a totes les boles de la seqüència
     *
     * @param o Observador a adjuntar
     */
    void attachToBoles(Observer o) {
        for (BolaButton bola : bolaButtonList) {
            bola.Attach(o);
        }
    }

    /**
     * Mètode per desadjuntar un observador a totes les boles de la seqüència
     *
     * @param o Observador a desadjuntar
     */
    void detachFromBoles(Observer o) {
        for (BolaButton bola : bolaButtonList) {
            bola.Detach(o);
        }
    }

    /**
     * Mètode per activar o desactivar de la seqüència
     *
     * @param enabled Si es vol activar o desactivar les boles
     */
    void setEnabled(Boolean enabled) {
        for (BolaButton bola : bolaButtonList) {
            bola.setEnabled(enabled);
        }
    }

    /**
     * Setter de l'identificador d'una bola
     *
     * @param index Posició de la bola [0, ..., 3]
     * @param id Identificador per la bola
     * @throws BolaNoExistent si l'índex no correspon a cap bola
     */
    void setBolaID(Integer index, String id) {
        if (index >= 0 && index < bolaButtonList.size())
            bolaButtonList.get(index).setID(id);
    }

    /**
     * Getter del color d'una bola de la seqüència
     *
     * @param index Posició de la bola [0, ..., 3]
     * @throws BolaNoExistent si l'índex no correspon a cap bola
     */
    BolaColor getBolaColor(Integer index) throws BolaNoExistent {
        if (index >= 0 && index < bolaButtonList.size())
            return bolaButtonList.get(index).getBolaColor();
        return null;
    }

    /**
     * Setter del color d'una bola de la seqüència
     *
     * @param index Posició de la bola [0, ..., 3]
     * @param color Color amb el qual es vol pintar la bola
     * @throws BolaNoExistent si l'índex no correspon a cap bola
     */
    void setBolaColor(Integer index, BolaColor color) throws BolaNoExistent {
        if (index < 0 || index >= bolaButtonList.size())
            throw new BolaNoExistent();
        bolaButtonList.get(index).setBolaColor(color);
    }

    /**
     * Setter dels colors de tota la seqüència
     *
     * @param sequenciaColors Llista d'enters amb els colors de la seqüència
     * @throws BolaNoExistent si l'índex no correspon a cap bola
     */
    void setSequenciaColors(List<Integer> sequenciaColors) throws BolaNoExistent {
        if (sequenciaColors.size() != bolaButtonList.size())
            throw new BolaNoExistent();
        for (int i = 0; i < bolaButtonList.size(); i++) {
            BolaColor bolaColor = BolaColor.findByNumber(sequenciaColors.get(i));
            bolaButtonList.get(i).setBolaColor(bolaColor);
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        bolaButton1 = new BolaButton();
        panel.add(bolaButton1.$$$getRootComponent$$$());
        bolaButton2 = new BolaButton();
        panel.add(bolaButton2.$$$getRootComponent$$$());
        bolaButton3 = new BolaButton();
        panel.add(bolaButton3.$$$getRootComponent$$$());
        bolaButton4 = new BolaButton();
        panel.add(bolaButton4.$$$getRootComponent$$$());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
